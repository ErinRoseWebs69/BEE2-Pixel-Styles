"Conditions"
	{
	"Condition"
		{
		"instance"	"[spExitCorr]"
		"Result"
			{
			// Corridors are oriented as if placed on a wall
			"switchOrientation"	 "wall"
			}
		}
	"Condition"
		{
		"Priority" "-300"
		"instance" "instances/BEE2/p1/elevator_sp/exit_corridor_4.vmf"
		"Result"
			{
			"ChangeIOType"
				{
				"Type" "AND"
				"InvertVar" "$start_open"
				"SpawnFire" "dynamic"
				"Enable_Cmd" "exit_door,Open,,0.00,-1"
				"Disable_Cmd" "exit_door,Close,,0.00,-1"
				}
			}
		}
	"Condition"
		{
		"instance"	"[door_frame_sp]"
		"instvar"	"$door_type exit"
		"Condition"
			{
			"StyleVar" "DoorCameras"
			// Basic check that this space is free - check all four blocks, and that it's inside the map.
			"BlockType"
				{
				"Offset" "1 0 1"
				"Type"   "AIR OCCUPIED GOO"
				}
			"PosIsSolid"
				{
				"Pos" "112 -16 0"
				"Type" "tile"
				}
			"PosIsSolid"
				{
				"Pos" "144 -16 0"
				"Type" "tile"
				}
			"PosIsSolid"
				{
				"Pos" "112 -48 0"
				"Type" "tile"
				}
			"PosIsSolid"
				{
				"Pos" "144 -48 0"
				"Type" "tile"
				}
			"Result"
				{
				"addOverlay"
					{
					"file"	 "instances/BEE2/p1/camera.vmf"
					"Offset" "128 -32 -64"
					}
				"PrecacheModel" "bee2/props_p1/security_camera"
				}
			}			
		// Remove the door if no inputs are connected.
		// P1 style often has no door between some chambers..
		"Condition"
			{
			"instvar" "$connectioncount > 0"
			"Switch"
				{
				"Flag" "instvar"
				"$corr_index = 1"
					{
					"TemplateBrush" 
						{
						"ID" "BEE2_EXIT_DOOR_FRAME_PORTAL1"
						"Force" "black 4x4"
						}
					}
				"$corr_index = 2"
					{
					"TemplateBrush" 
						{
						"ID" "BEE2_EXIT_DOOR_FRAME_PORTAL1"
						"Force" "white"
						}
					}
				"$corr_index = 3"
					{
					"TemplateBrush" 
						{
						"ID" "BEE2_EXIT_DOOR_FRAME_PORTAL1"
						"Force" "black 4x4"
						}
					}
				// This exit uses the vertical door, so it doesn't use the door frames.
				"$corr_index = 4"
					{
					"SetTiles"
						{
						"Tile" "...."
						"Tile" "...."
						"Tile" "...."
						"Tile" "...."
						}
					}
				}
			"Result"
				{
				// Then remove the instance, we don't use the frame.
				"Changeinstance" ""
				}
			"Else"
				{
				// Add the frame model..
				"Changeinstance"    "<ITEM_EXIT_DOOR:bee2_corr_nodoor>"
				// And that shouldn't have any tiles.
				"SetTiles"
					{
					"Tile" "...."
					"Tile" "...."
					"Tile" "...."
					"Tile" "...."
					}
				}
			}
		}
	"Condition"
		{
		"Priority"	"10"
		"OR"
			{
			"instance"	"instances/BEE2/p1/elevator_sp/exit_corridor_1.vmf"
			"instance"	"instances/BEE2/p1/elevator_sp/exit_corridor_2.vmf"
			"instance"	"instances/BEE2/p1/elevator_sp/exit_corridor_3.vmf"
			}
		"Condition"
			{
			"Game" "Aperture Tag"
			"Result"
				{
				"addOverlay"
					{
					"File"   "instances/BEE2/p1/elevator_sp/exit_fizz_tag.vmf"
					}
				"Pack" "PACK_BEE2_RETRO_CLEAN_FIZZ"
				}
			"Else"
				{
				"Condition"
					{
					// Tuleby's Portalgun On/Off buttons.
					"Has" "PortalGunOnOff"
					"Result"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz_absolute.vmf"
						}
					"Else"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz_p2.vmf"
						}
					}
				}
			}
			
		"Condition"
			{
			"instvar" "$connectioncount > 0"
			"Result"
				{
				"addOverlay"
					{
					"File"   "instances/BEE2/p1/elevator_sp/exit_door.vmf"
					}
				}
			}
		"Condition"
			{
			"IfPreview"	"1"
			"StyleVar" "RestartOnExit"
			"Result"
				{
				"addOverlay"	
					{
					"File"	"instances/BEE2/clean/elevator_sp/exit_door_preview.vmf"
					// TODO: remove this rotation once the clean corridors have also been reoriented
					"rotation" "270 180 0"
					}
				}
			}
		}
	"Condition"
		{
		"Priority"	"10"
		// Exit 4 has a 256-long fizzler
		"instance"	"instances/BEE2/p1/elevator_sp/exit_corridor_4.vmf"
		"Condition"
			{
			"Game" "Aperture Tag"
			"Result"
				{
				"addOverlay"
					{
					"File"   "instances/BEE2/p1/elevator_sp/exit_fizz_tag_corr4.vmf"
					}
				"Pack" "PACK_BEE2_RETRO_CLEAN_FIZZ"
				}
			"Else"
				{
				"Condition"
					{
					// Tuleby's Portalgun On/Off buttons.
					"Has" "PortalGunOnOff"
					"Result"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz_absolute_corr4.vmf"
						}
					"Else"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz_p2_corr4.vmf"
						}
					}
				}
			}			
		"Condition"
			{
			"instvar" "$connectioncount > 0"
			"Result"
				{
				"addOverlay" "instances/BEE2/p1/elevator_sp/exit_door_vert.vmf"
				}
			}
		"Condition"
			{
			"IfPreview"	"1"
			"StyleVar" "RestartOnExit"
			"Result"
				{
				"addOverlay"	
					{
					"File"	"instances/BEE2/clean/elevator_sp/exit_door_preview.vmf"
					// TODO: remove this rotation once the clean corridors have also been reoriented
					"rotation" "270 180 0"
					}
				}
			}
		// Check if the space next to the corridor is free, so we can place the obs room directly.
		"Condition"
			{
			"BlockType"
				{
				"offset"  "-2 -2 1"
				"offset2" "-5 -3 2"
				"Type" "VOID SOLID"
				}
			"BlockType"
				{
				"offset"  "-2 -1 3"
				"offset2" "-5 -3 3"
				"Type" "VOID SOLID"
				}
			"BlockType"
				{
				"offset"  "-5 -1 1"
				"offset2" "-5 -1 2"
				"Type" "VOID SOLID"
				}
			"Result"
				{
				// Mark the blocks as being occupied by us.
				// This will re-apply EMBED to the corridor
				// voxels, but that's not a problem.
				"SetBlock"
					{
					"offset"  "-2 -1 1"
					"offset2" "-5 -3 3"
					"Type"    "EMBED"
					}

				// Remove tiles in the way.
				"TemplateBrush" "P1_EXIT_4_OBS_ROOM"
				// Install the observation room.
				"addOverlay"
					{
					"File" "instances/BEE2/p1/elevator_sp/exit_corridor_obs_room.vmf"
					"Offset" "-384 -208 191"
					"rotation" "0 90 0"
					}
				// Add an areaportal in to optimise the link.
				"addOverlay" "instances/BEE2/p1/elevator_sp/exit_corridor_4_obs_areaportal.vmf"
				}
			"Else" // No room, use a worldportal.
				{
				"addGlobal"
					{
					"Position" "-3072 2056 0"
					"File"     "instances/BEE2/p1/elevator_sp/exit_corridor_obs_room.vmf"
					"Name"     "global_ents"
					}
				"addGlobal" // This seals it and adds the worldportal.
					{
					"Position" "-3072 2056 0"
					"File"     "instances/BEE2/p1/elevator_sp/exit_corridor_obs_room_portal.vmf"
					"Name"     "global_ents"
					}
				// Add the corresponding one in the corridor.
				"addOverlay" "instances/BEE2/p1/elevator_sp/exit_corridor_4_obsportal.vmf"
				}
			}
		}
		
	"Condition"
		{
		// Don't add this fizzler in Tag
		"instance"	"[elevatorExit]"
		"NOT"
			{
			"game"	"aptag"
			}
		"Result"
			{
			"AddOverlay" "instances/BEE2/p1/elevator_sp/elevator_exit_fizz.vmf"
			}
		}

	// Check the kind of exit sign, then pick an appropriate instance.
	// $orient indicates if the signs are vertically/horizontally stacked.
	// $arrow is the direction the arrow should point.
	// We never do [E<] / [>E], so only some directions have mirrored variants.
	"Condition"
		{
		"instance" "instances/BEE2/p1/elevator_sp/exit_sign/sign.vmf"
		"Condition"	
			{
			"instvar" "$orient vertical"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow north" { "Suffix" "vert_north" }
				"$arrow south" { "Suffix" "vert_south" }
				"$arrow east" 
					{
					"Random"
						{
						"Suffix" "vert_east_a"
						"Suffix" "vert_east_b"
						}
					}
				"$arrow west"
					{
					"Random"
						{
						"Suffix" "vert_west_a"
						"Suffix" "vert_west_b"
						}
					}
				}
			}
		"Condition"	
			{
			"instvar" "$orient horizontal"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow east" { "Suffix" "horiz_east" }
				"$arrow west" { "Suffix" "horiz_west" }
				"$arrow north" 
					{
					"Random"
						{
						"Suffix" "horiz_north_a"
						"Suffix" "horiz_north_b"
						}
					}
				"$arrow south"
					{
					"Random"
						{
						"Suffix" "horiz_south_a"
						"Suffix" "horiz_south_b"
						}
					}
				}
			}
		}
	}
